import java.util.*;

public class BalancedParentheses {
    public static boolean isBalanced(String s) {
        Stack<Character> stack = new Stack<>();

        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);

            if (ch == '(' || ch == '{' || ch == '[') {
                stack.push(ch);
            } else if (ch == ')' || ch == '}' || ch == ']') {
                if (stack.isEmpty()) {
                    return false;
                }

                char top = stack.pop();
                if (ch == ')' && top != '(') {
                    return false;
                } else if (ch == '}' && top != '{') {
                    return false;
                } else if (ch == ']' && top != '[') {
                    return false;
                }
            } else {
                return false;
            }
        }

        if (stack.isEmpty()) {
            return true;
        } else {
            return false;
        }
    }

    public static void main(String[] args) {
        String[] st = {"((()))", "(()", "{[()]}", "{[(])}", "[]{}()", "[(])"};

        for (int i = 0; i < st.length; i++) {
            String s = st[i];
            boolean result = isBalanced(s);

            if (result == true) {
                System.out.println(s + " → Balanced");
            } else {
                System.out.println(s + " → Not Balanced");
            }
        }
    }
}
 29 changes: 29 additions & 0 deletions29  
Remove Adjacent Duplicates.txt
