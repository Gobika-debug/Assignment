class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class LinkedListQueue {
    Node front, rear;
    LinkedListQueue() {
        front = rear = null;
    }

    public void enqueue(int value) {
        Node newNode = new Node(value);

        if (rear == null) {
            front = rear = newNode;
            System.out.println(value + " enqueued");
            return;
        }

        rear.next = newNode;
        rear = newNode;
        System.out.println(value + " enqueued");
    }

    public int dequeue() {
        if (front == null) {
            System.out.println("Queue is empty");
            return -1;
        }

        int removed = front.data;
        front = front.next;

        if (front == null) {
            rear = null;
        }

        System.out.println(removed + " dequeued");
        return removed;
    }

    public void display() {
        if (front == null) {
            System.out.println("Queue is empty");
            return;
        }

        System.out.print("Queue elements: ");
        Node temp = front;
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }
}

public class Main {
    public static void main(String[] args) {
        LinkedListQueue queue = new LinkedListQueue();

        queue.enqueue(10);
        queue.enqueue(20);
        queue.enqueue(30);
        queue.display();
        queue.dequeue();
        queue.dequeue();
        queue.display();
        queue.dequeue();
        queue.dequeue(); 
    }
}
